plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.pawns.sdk'
                version = '1.0.2'
                from components.release
            }
        }
    }
}

android {
    namespace 'com.pawns.ndk'
    compileSdk 34

    defaultConfig {
        minSdk 21
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'consumer-rules.pro'

        externalNativeBuild {
            cmake {
                // Passes optional arguments to CMake.
                arguments '-DANDROID_ARM_NEON=TRUE', '-DANDROID_TOOLCHAIN=clang'
                // Sets a flag to enable format macro constants for the C compiler.
                cFlags '-D__STDC_FORMAT_MACROS'
                // Sets optional flags for the C++ compiler.
                cppFlags '-fexceptions', '-frtti'
            }
        }

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            debugSymbolLevel 'SYMBOL_TABLE'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path file("${projectDir}/src/main/CMakeLists.txt")
            version '3.22.1'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDir 'src/main/prebuilt_libs'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging true
            keepDebugSymbols.add("**/*.so")
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
}
